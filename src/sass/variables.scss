@use 'functions';
@use 'sass:list';
@use 'sass:map';
$colorMap: () !default;
$colorMap: map.merge(
  (
    'blue': (
      '': #005ec1,
      50: #005ec1,
      100: #007cff,
      150: #56a6fa,
      200: #dfefff,
      250: #f0f8ff,
    ),
    'green': (
      '': #0d757e,
      50: #0d757e,
      100: #10a0ad,
      150: #51b9c3,
      200: #d8f3f2,
      250: #eefdfe,
    ),
    'orange': (
      '': #d36b08,
      50: #d36b08,
      100: #ffa940,
      150: #fec861,
      200: #fff3de,
      250: #fcf9f3,
    ),
    'red': (
      '': #cf2c2c,
      50: #cf2c2c,
      100: #e54e4e,
      150: #f87871,
      200: #ffe7e7,
      250: #fff8f8,
    ),
  ),
  $colorMap
);
$spacer: 8px;
$spacers: () !default;
$spacers: map.merge(
  (
    '': $spacer * 1,
    0: $spacer * 0,
    1: $spacer * 1,
    2: $spacer * 2,
    3: $spacer * 3,
    4: $spacer * 4,
    5: $spacer * 5,
    6: $spacer * 6,
  ),
  $spacers
);

$colorsClassList: (
  (
    class: bg,
    property: background-color,
  ),
  (
    class: border,
    property: border-color,
  )
);

$spacerClassList: (
  (
    class: mt,
    property: margin-top,
    value: $spacers,
  ),
  (
    class: mb,
    property: margin-bottom,
    value: $spacers,
  ),
  (
    class: ml,
    property: margin-left,
    value: $spacers,
  ),
  (
    class: mr,
    property: margin-right,
    value: $spacers,
  ),
  (
    class: mx,
    property: margin-left margin-right,
    value:
      map.merge(
        $spacers,
        (
          auto: auto,
        )
      ),
  ),
  (
    class: my,
    property: margin-top margin-bottom,
    value:
      map.merge(
        $spacers,
        (
          auto: auto,
        )
      ),
  ),
  (
    class: pl,
    property: padding-left,
    value: $spacers,
  ),
  (
    class: pr,
    property: padding-right,
    value: $spacers,
  ),
  (
    class: pt,
    property: padding-top,
    value: $spacers,
  ),
  (
    class: pb,
    property: padding-bottom,
    value: $spacers,
  ),
  (
    class: px,
    property: padding-left padding-right,
    value: $spacers,
  ),
  (
    class: py,
    property: padding-top padding-bottom,
    value: $spacers,
  )
);

$border-width: (
  0: 0,
  '': 1px,
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
);
$border-radius: (
  0: 0,
  '': 2px,
  2: 2px,
  4: 4px,
  30: 30px,
);

$borderClassList: (
  (
    class: border,
    property: border-width,
    value: $border-width,
  ),
  (
    class: round,
    property: border-radius,
    value: $border-radius,
  ),
  (
    class: border,
    property: border-style,
    value: (
      solid: solid,
      dashed: dashed,
      none: none,
      hidden: hidden,
      dotted: dotted,
      double: double,
      inset: inset,
      outset: outset,
      groove: groove,
      ridge: ridge
    )
  )
);

$box-shadow: (
  '': 0 1px 6px rgba(#3f4248, 0.1),
  1: 0 1px 6px rgba(#3f4248, 0.1),
  2: 0 6px 28px rgba(#3f4248, 0.16),
  3: 0 20px 32px rgba(#3f4248, 0.24),
);

$length: (
  0: 0,
  1: $spacer * 2,
  2: $spacer * 2.5,
  3: $spacer * 3,
  4: $spacer * 4,
  6: $spacer * 6,
  8: $spacer * 8,
  10: $spacer * 10,
  12: $spacer * 12,
  16: $spacer * 16,
  20: $spacer * 20,
  24: $spacer * 24,
  28: $spacer * 28,
  32: $spacer * 32,
  36: $spacer * 36,
  40: $spacer * 40,
  '1\\/2': 50%,
  '1\\3': 33.333%,
  '2\\3': 66.666%,
  '1\\4': 25%,
  '1\\5': 20%,
  '2\\5': 40%,
  '3\\5': 60%,
  '4\\5': 80%,
  'full': 100%,
  'min': min-content,
  'max': max-content,
  'fit': fit-content,
  'auto': auto,
);
$restrict-length: (
  0: 0,
  'min': min-content,
  'max': max-content,
  'fit': fit-content,
  'full': 100%,
);

$rectSizeClassList: (
  (
    class: 'w',
    property: 'width',
    value:
      map.merge(
        $length,
        (
          screen: 100vw,
        )
      ),
  ),
  (
    class: 'h',
    property: 'height',
    value:
      map.merge(
        $length,
        (
          screen: 100vh,
        )
      ),
  ),
  (
    class: 'min-w',
    property: min-width,
    value: $restrict-length,
  ),
  (
    class: 'max-w',
    property: max-width,
    value: $restrict-length,
  ),
  (
    class: 'min-h',
    property: min-height,
    value: $restrict-length,
  ),
  (
    class: 'max-h',
    property: max-height,
    value: $restrict-length,
  ),
  // sass 不识别单元素的list map 数据
  (
    class: shadow,
    property: box-shadow,
    value: $box-shadow,
  )
);

$displayClassList:(
  (
    class: flex,
    property: display,
    value: (
      '': flex
    )
  ),
  (
    class: inline,
    property: display,
    value: (
      '': inline
    )
  ),
  (
    class: inline-block,
    property: display,
    value: (
      '': inline-block
    )
  ),
  (
    class: block,
    property: display,
    value: (
      '': block
    )
  ),
  (
    class: hide,
    property: display,
    value: (
      '': none
    )
  ),
  (
    class: inline-flex,
    property: display,
    value: (
      '': inline-flex
    )
  ),
  (
    class: justify,
    property: justify-content,
    value: (
      start: flex-start,
      end: flex-end,
      center: center,
      between: space-between,
      evenly: space-evenly,
      around: space-around
    )
  ),
  (
    class: justify-items,
    property: justify-items,
    value: (
      start: start,
      end: end,
      center: center,
      strecth: stretch
    )
  ),
  (
    class: justify-self,
    property: justify-self,
    value: (
      auto: auto,
      start: start,
      end: end,
      center: center,
      stretch: stretch
    )
  ),
  (
    class: items,
    property: align-items,
    value: (
      start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch
    )
  ),
  (
    class: content,
    property: align-content,
    value: (
      start: flex-start,
      end: flex-end,
      between: space-between,
      around: space-around,
      evenly: space-evenly
    )
  ),
  (
    class: self,
    property: align-self,
    value: (
      auto: auto,
      start: flex-start,
      end: flex-end,
      center: center,
      stretch: stretch,
      baseline: baseline
    )
  )
);

$colorsClassList: functions.map-class-list($colorsClassList, $colorMap);

$classTypeList: (
  $colorsClassList,
  $spacerClassList,
  $borderClassList,
  // $boxShadowClassList,
  $rectSizeClassList,
  $displayClassList
);

$classList: functions.flat-list($classTypeList);
